// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common/proto/chat/message.proto

// 这对吗

package chat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserId    int64                  `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      int64                  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MessageId     string                 `protobuf:"bytes,5,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 可选，用于去重/ack
	IsRead        bool                   `protobuf:"varint,6,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`         // 是否已读
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_common_proto_chat_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_chat_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_common_proto_chat_message_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetFromUserId() int64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *ChatMessage) GetToUserId() int64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *ChatMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChatMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ChatMessage) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

type SendMessageReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserId    int64                  `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"` // 发送者
	ToUserId      int64                  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`       // 接收者
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                            // 消息内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageReq) Reset() {
	*x = SendMessageReq{}
	mi := &file_common_proto_chat_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReq) ProtoMessage() {}

func (x *SendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_chat_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReq.ProtoReflect.Descriptor instead.
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return file_common_proto_chat_message_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageReq) GetFromUserId() int64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *SendMessageReq) GetToUserId() int64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *SendMessageReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SendMessageResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                        // 状态 OK / FAILED
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 消息唯一ID（用于 ack）
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                 // 服务端生成的发送时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResp) Reset() {
	*x = SendMessageResp{}
	mi := &file_common_proto_chat_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResp) ProtoMessage() {}

func (x *SendMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_chat_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResp.ProtoReflect.Descriptor instead.
func (*SendMessageResp) Descriptor() ([]byte, []int) {
	return file_common_proto_chat_message_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendMessageResp) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendMessageResp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetChatHistoryReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                            // 当前用户
	PeerId          int64                  `protobuf:"varint,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`                            // 对方用户
	Limit           int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                                            // 查询条数
	BeforeTimestamp int64                  `protobuf:"varint,4,opt,name=before_timestamp,json=beforeTimestamp,proto3" json:"before_timestamp,omitempty"` // 用于分页（查询某时间戳前的消息）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetChatHistoryReq) Reset() {
	*x = GetChatHistoryReq{}
	mi := &file_common_proto_chat_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryReq) ProtoMessage() {}

func (x *GetChatHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_chat_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryReq.ProtoReflect.Descriptor instead.
func (*GetChatHistoryReq) Descriptor() ([]byte, []int) {
	return file_common_proto_chat_message_proto_rawDescGZIP(), []int{3}
}

func (x *GetChatHistoryReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetChatHistoryReq) GetPeerId() int64 {
	if x != nil {
		return x.PeerId
	}
	return 0
}

func (x *GetChatHistoryReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatHistoryReq) GetBeforeTimestamp() int64 {
	if x != nil {
		return x.BeforeTimestamp
	}
	return 0
}

type GetChatHistoryResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessage         `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatHistoryResp) Reset() {
	*x = GetChatHistoryResp{}
	mi := &file_common_proto_chat_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryResp) ProtoMessage() {}

func (x *GetChatHistoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_chat_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryResp.ProtoReflect.Descriptor instead.
func (*GetChatHistoryResp) Descriptor() ([]byte, []int) {
	return file_common_proto_chat_message_proto_rawDescGZIP(), []int{4}
}

func (x *GetChatHistoryResp) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type AckMessageReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageReq) Reset() {
	*x = AckMessageReq{}
	mi := &file_common_proto_chat_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageReq) ProtoMessage() {}

func (x *AckMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_chat_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageReq.ProtoReflect.Descriptor instead.
func (*AckMessageReq) Descriptor() ([]byte, []int) {
	return file_common_proto_chat_message_proto_rawDescGZIP(), []int{5}
}

func (x *AckMessageReq) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *AckMessageReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AckMessageResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageResp) Reset() {
	*x = AckMessageResp{}
	mi := &file_common_proto_chat_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageResp) ProtoMessage() {}

func (x *AckMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_chat_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageResp.ProtoReflect.Descriptor instead.
func (*AckMessageResp) Descriptor() ([]byte, []int) {
	return file_common_proto_chat_message_proto_rawDescGZIP(), []int{6}
}

func (x *AckMessageResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_common_proto_chat_message_proto protoreflect.FileDescriptor

const file_common_proto_chat_message_proto_rawDesc = "" +
	"\n" +
	"\x1fcommon/proto/chat/message.proto\x12\x04chat\"\xbd\x01\n" +
	"\vChatMessage\x12 \n" +
	"\ffrom_user_id\x18\x01 \x01(\x03R\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x02 \x01(\x03R\btoUserId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"message_id\x18\x05 \x01(\tR\tmessageId\x12\x17\n" +
	"\ais_read\x18\x06 \x01(\bR\x06isRead\"j\n" +
	"\x0eSendMessageReq\x12 \n" +
	"\ffrom_user_id\x18\x01 \x01(\x03R\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x02 \x01(\x03R\btoUserId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"f\n" +
	"\x0fSendMessageResp\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"\x86\x01\n" +
	"\x11GetChatHistoryReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x17\n" +
	"\apeer_id\x18\x02 \x01(\x03R\x06peerId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\x12)\n" +
	"\x10before_timestamp\x18\x04 \x01(\x03R\x0fbeforeTimestamp\"C\n" +
	"\x12GetChatHistoryResp\x12-\n" +
	"\bmessages\x18\x01 \x03(\v2\x11.chat.ChatMessageR\bmessages\"G\n" +
	"\rAckMessageReq\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"(\n" +
	"\x0eAckMessageResp\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\xc0\x01\n" +
	"\x04Chat\x12:\n" +
	"\vSendMessage\x12\x14.chat.SendMessageReq\x1a\x15.chat.SendMessageResp\x12C\n" +
	"\x0eGetChatHistory\x12\x17.chat.GetChatHistoryReq\x1a\x18.chat.GetChatHistoryResp\x127\n" +
	"\n" +
	"AckMessage\x12\x13.chat.AckMessageReq\x1a\x14.chat.AckMessageRespB\rZ\v./chat;chatb\x06proto3"

var (
	file_common_proto_chat_message_proto_rawDescOnce sync.Once
	file_common_proto_chat_message_proto_rawDescData []byte
)

func file_common_proto_chat_message_proto_rawDescGZIP() []byte {
	file_common_proto_chat_message_proto_rawDescOnce.Do(func() {
		file_common_proto_chat_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_chat_message_proto_rawDesc), len(file_common_proto_chat_message_proto_rawDesc)))
	})
	return file_common_proto_chat_message_proto_rawDescData
}

var file_common_proto_chat_message_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_common_proto_chat_message_proto_goTypes = []any{
	(*ChatMessage)(nil),        // 0: chat.ChatMessage
	(*SendMessageReq)(nil),     // 1: chat.SendMessageReq
	(*SendMessageResp)(nil),    // 2: chat.SendMessageResp
	(*GetChatHistoryReq)(nil),  // 3: chat.GetChatHistoryReq
	(*GetChatHistoryResp)(nil), // 4: chat.GetChatHistoryResp
	(*AckMessageReq)(nil),      // 5: chat.AckMessageReq
	(*AckMessageResp)(nil),     // 6: chat.AckMessageResp
}
var file_common_proto_chat_message_proto_depIdxs = []int32{
	0, // 0: chat.GetChatHistoryResp.messages:type_name -> chat.ChatMessage
	1, // 1: chat.Chat.SendMessage:input_type -> chat.SendMessageReq
	3, // 2: chat.Chat.GetChatHistory:input_type -> chat.GetChatHistoryReq
	5, // 3: chat.Chat.AckMessage:input_type -> chat.AckMessageReq
	2, // 4: chat.Chat.SendMessage:output_type -> chat.SendMessageResp
	4, // 5: chat.Chat.GetChatHistory:output_type -> chat.GetChatHistoryResp
	6, // 6: chat.Chat.AckMessage:output_type -> chat.AckMessageResp
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_proto_chat_message_proto_init() }
func file_common_proto_chat_message_proto_init() {
	if File_common_proto_chat_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_chat_message_proto_rawDesc), len(file_common_proto_chat_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_proto_chat_message_proto_goTypes,
		DependencyIndexes: file_common_proto_chat_message_proto_depIdxs,
		MessageInfos:      file_common_proto_chat_message_proto_msgTypes,
	}.Build()
	File_common_proto_chat_message_proto = out.File
	file_common_proto_chat_message_proto_goTypes = nil
	file_common_proto_chat_message_proto_depIdxs = nil
}
