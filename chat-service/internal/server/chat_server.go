// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: message.proto

package server

import (
	"context"

	"my-IMSystem/chat-service/chat"
	"my-IMSystem/chat-service/internal/logic"
	"my-IMSystem/chat-service/internal/svc"
)

type ChatServer struct {
	svcCtx *svc.ServiceContext
	chat_chat.UnimplementedChatServer
}

func NewChatServer(svcCtx *svc.ServiceContext) *ChatServer {
	return &ChatServer{
		svcCtx: svcCtx,
	}
}

func (s *ChatServer) SendMessage(ctx context.Context, in *chat_chat.SendMessageReq) (*chat_chat.SendMessageResp, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

func (s *ChatServer) GetChatHistory(ctx context.Context, in *chat_chat.GetChatHistoryReq) (*chat_chat.GetChatHistoryResp, error) {
	l := logic.NewGetChatHistoryLogic(ctx, s.svcCtx)
	return l.GetChatHistory(in)
}

func (s *ChatServer) AckMessage(ctx context.Context, in *chat_chat.AckMessageReq) (*chat_chat.AckMessageResp, error) {
	l := logic.NewAckMessageLogic(ctx, s.svcCtx)
	return l.AckMessage(in)
}
