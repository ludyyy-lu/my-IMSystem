// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common/proto/friend/friend.proto

package friend

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestStatus int32

const (
	RequestStatus_PENDING  RequestStatus = 0
	RequestStatus_ACCEPTED RequestStatus = 1
	RequestStatus_REJECTED RequestStatus = 2
)

// Enum value maps for RequestStatus.
var (
	RequestStatus_name = map[int32]string{
		0: "PENDING",
		1: "ACCEPTED",
		2: "REJECTED",
	}
	RequestStatus_value = map[string]int32{
		"PENDING":  0,
		"ACCEPTED": 1,
		"REJECTED": 2,
	}
)

func (x RequestStatus) Enum() *RequestStatus {
	p := new(RequestStatus)
	*p = x
	return p
}

func (x RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_friend_friend_proto_enumTypes[0].Descriptor()
}

func (RequestStatus) Type() protoreflect.EnumType {
	return &file_common_proto_friend_friend_proto_enumTypes[0]
}

func (x RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatus.Descriptor instead.
func (RequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{0}
}

// 添加好友请求
// 发起好友请求
type SendFriendRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUserId    int64                  `protobuf:"varint,1,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId      int64                  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	Remark        string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"` // 申请备注
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendRequestRequest) Reset() {
	*x = SendFriendRequestRequest{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestRequest) ProtoMessage() {}

func (x *SendFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*SendFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{0}
}

func (x *SendFriendRequestRequest) GetFromUserId() int64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *SendFriendRequestRequest) GetToUserId() int64 {
	if x != nil {
		return x.ToUserId
	}
	return 0
}

func (x *SendFriendRequestRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SendFriendRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendFriendRequestResponse) Reset() {
	*x = SendFriendRequestResponse{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestResponse) ProtoMessage() {}

func (x *SendFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*SendFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{1}
}

func (x *SendFriendRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取“我收到的”好友请求
type GetFriendRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendRequestsRequest) Reset() {
	*x = GetFriendRequestsRequest{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestsRequest) ProtoMessage() {}

func (x *GetFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{2}
}

func (x *GetFriendRequestsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     int64                  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	FromUserId    int64                  `protobuf:"varint,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	FromUsername  string                 `protobuf:"bytes,3,opt,name=from_username,json=fromUsername,proto3" json:"from_username,omitempty"`
	Remark        string                 `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // pending / accepted / rejected
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{3}
}

func (x *FriendRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *FriendRequest) GetFromUserId() int64 {
	if x != nil {
		return x.FromUserId
	}
	return 0
}

func (x *FriendRequest) GetFromUsername() string {
	if x != nil {
		return x.FromUsername
	}
	return ""
}

func (x *FriendRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetFriendRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*FriendRequest       `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendRequestsResponse) Reset() {
	*x = GetFriendRequestsResponse{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestsResponse) ProtoMessage() {}

func (x *GetFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{4}
}

func (x *GetFriendRequestsResponse) GetRequests() []*FriendRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

// 处理好友请求（接受 / 拒绝）
type RespondFriendRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     int64                  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Accept        bool                   `protobuf:"varint,2,opt,name=accept,proto3" json:"accept,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondFriendRequestRequest) Reset() {
	*x = RespondFriendRequestRequest{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondFriendRequestRequest) ProtoMessage() {}

func (x *RespondFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*RespondFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{5}
}

func (x *RespondFriendRequestRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *RespondFriendRequestRequest) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

type RespondFriendRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondFriendRequestResponse) Reset() {
	*x = RespondFriendRequestResponse{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondFriendRequestResponse) ProtoMessage() {}

func (x *RespondFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*RespondFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{6}
}

func (x *RespondFriendRequestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除好友请求
type DeleteFriendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId      int64                  `protobuf:"varint,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteFriendRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFriendRequest) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type DeleteFriendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendResponse) Reset() {
	*x = DeleteFriendResponse{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResponse) ProtoMessage() {}

func (x *DeleteFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteFriendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取好友列表请求
type GetFriendsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendsRequest) Reset() {
	*x = GetFriendsRequest{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsRequest) ProtoMessage() {}

func (x *GetFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendsRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{9}
}

func (x *GetFriendsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type FriendInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FriendId      int64                  `protobuf:"varint,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FriendInfo) Reset() {
	*x = FriendInfo{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfo) ProtoMessage() {}

func (x *FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfo.ProtoReflect.Descriptor instead.
func (*FriendInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{10}
}

func (x *FriendInfo) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *FriendInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetFriendsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Friends       []*FriendInfo          `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFriendsResponse) Reset() {
	*x = GetFriendsResponse{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsResponse) ProtoMessage() {}

func (x *GetFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendsResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendsResponse) GetFriends() []*FriendInfo {
	if x != nil {
		return x.Friends
	}
	return nil
}

type BlockFriendReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId      int64                  `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockFriendReq) Reset() {
	*x = BlockFriendReq{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockFriendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockFriendReq) ProtoMessage() {}

func (x *BlockFriendReq) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockFriendReq.ProtoReflect.Descriptor instead.
func (*BlockFriendReq) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{12}
}

func (x *BlockFriendReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BlockFriendReq) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type BlockFriendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockFriendResp) Reset() {
	*x = BlockFriendResp{}
	mi := &file_common_proto_friend_friend_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockFriendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockFriendResp) ProtoMessage() {}

func (x *BlockFriendResp) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_friend_friend_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockFriendResp.ProtoReflect.Descriptor instead.
func (*BlockFriendResp) Descriptor() ([]byte, []int) {
	return file_common_proto_friend_friend_proto_rawDescGZIP(), []int{13}
}

func (x *BlockFriendResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_common_proto_friend_friend_proto protoreflect.FileDescriptor

const file_common_proto_friend_friend_proto_rawDesc = "" +
	"\n" +
	" common/proto/friend/friend.proto\x12\x06friend\"r\n" +
	"\x18SendFriendRequestRequest\x12 \n" +
	"\ffrom_user_id\x18\x01 \x01(\x03R\n" +
	"fromUserId\x12\x1c\n" +
	"\n" +
	"to_user_id\x18\x02 \x01(\x03R\btoUserId\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\"5\n" +
	"\x19SendFriendRequestResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"3\n" +
	"\x18GetFriendRequestsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"\xa5\x01\n" +
	"\rFriendRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\x03R\trequestId\x12 \n" +
	"\ffrom_user_id\x18\x02 \x01(\x03R\n" +
	"fromUserId\x12#\n" +
	"\rfrom_username\x18\x03 \x01(\tR\ffromUsername\x12\x16\n" +
	"\x06remark\x18\x04 \x01(\tR\x06remark\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\"N\n" +
	"\x19GetFriendRequestsResponse\x121\n" +
	"\brequests\x18\x01 \x03(\v2\x15.friend.FriendRequestR\brequests\"T\n" +
	"\x1bRespondFriendRequestRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\x03R\trequestId\x12\x16\n" +
	"\x06accept\x18\x02 \x01(\bR\x06accept\"8\n" +
	"\x1cRespondFriendRequestResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"K\n" +
	"\x13DeleteFriendRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1b\n" +
	"\tfriend_id\x18\x02 \x01(\x03R\bfriendId\"0\n" +
	"\x14DeleteFriendResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\",\n" +
	"\x11GetFriendsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"E\n" +
	"\n" +
	"FriendInfo\x12\x1b\n" +
	"\tfriend_id\x18\x01 \x01(\x03R\bfriendId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"B\n" +
	"\x12GetFriendsResponse\x12,\n" +
	"\afriends\x18\x01 \x03(\v2\x12.friend.FriendInfoR\afriends\"F\n" +
	"\x0eBlockFriendReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\x03R\btargetId\"#\n" +
	"\x0fBlockFriendResp\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg*8\n" +
	"\rRequestStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\f\n" +
	"\bACCEPTED\x10\x01\x12\f\n" +
	"\bREJECTED\x10\x022\xef\x03\n" +
	"\x06Friend\x12X\n" +
	"\x11SendFriendRequest\x12 .friend.SendFriendRequestRequest\x1a!.friend.SendFriendRequestResponse\x12X\n" +
	"\x11GetFriendRequests\x12 .friend.GetFriendRequestsRequest\x1a!.friend.GetFriendRequestsResponse\x12a\n" +
	"\x14RespondFriendRequest\x12#.friend.RespondFriendRequestRequest\x1a$.friend.RespondFriendRequestResponse\x12C\n" +
	"\n" +
	"GetFriends\x12\x19.friend.GetFriendsRequest\x1a\x1a.friend.GetFriendsResponse\x12I\n" +
	"\fDeleteFriend\x12\x1b.friend.DeleteFriendRequest\x1a\x1c.friend.DeleteFriendResponse\x12>\n" +
	"\vBlockFriend\x12\x16.friend.BlockFriendReq\x1a\x17.friend.BlockFriendRespB\x11Z\x0f./friend;friendb\x06proto3"

var (
	file_common_proto_friend_friend_proto_rawDescOnce sync.Once
	file_common_proto_friend_friend_proto_rawDescData []byte
)

func file_common_proto_friend_friend_proto_rawDescGZIP() []byte {
	file_common_proto_friend_friend_proto_rawDescOnce.Do(func() {
		file_common_proto_friend_friend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_friend_friend_proto_rawDesc), len(file_common_proto_friend_friend_proto_rawDesc)))
	})
	return file_common_proto_friend_friend_proto_rawDescData
}

var file_common_proto_friend_friend_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_proto_friend_friend_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_common_proto_friend_friend_proto_goTypes = []any{
	(RequestStatus)(0),                   // 0: friend.RequestStatus
	(*SendFriendRequestRequest)(nil),     // 1: friend.SendFriendRequestRequest
	(*SendFriendRequestResponse)(nil),    // 2: friend.SendFriendRequestResponse
	(*GetFriendRequestsRequest)(nil),     // 3: friend.GetFriendRequestsRequest
	(*FriendRequest)(nil),                // 4: friend.FriendRequest
	(*GetFriendRequestsResponse)(nil),    // 5: friend.GetFriendRequestsResponse
	(*RespondFriendRequestRequest)(nil),  // 6: friend.RespondFriendRequestRequest
	(*RespondFriendRequestResponse)(nil), // 7: friend.RespondFriendRequestResponse
	(*DeleteFriendRequest)(nil),          // 8: friend.DeleteFriendRequest
	(*DeleteFriendResponse)(nil),         // 9: friend.DeleteFriendResponse
	(*GetFriendsRequest)(nil),            // 10: friend.GetFriendsRequest
	(*FriendInfo)(nil),                   // 11: friend.FriendInfo
	(*GetFriendsResponse)(nil),           // 12: friend.GetFriendsResponse
	(*BlockFriendReq)(nil),               // 13: friend.BlockFriendReq
	(*BlockFriendResp)(nil),              // 14: friend.BlockFriendResp
}
var file_common_proto_friend_friend_proto_depIdxs = []int32{
	4,  // 0: friend.GetFriendRequestsResponse.requests:type_name -> friend.FriendRequest
	11, // 1: friend.GetFriendsResponse.friends:type_name -> friend.FriendInfo
	1,  // 2: friend.Friend.SendFriendRequest:input_type -> friend.SendFriendRequestRequest
	3,  // 3: friend.Friend.GetFriendRequests:input_type -> friend.GetFriendRequestsRequest
	6,  // 4: friend.Friend.RespondFriendRequest:input_type -> friend.RespondFriendRequestRequest
	10, // 5: friend.Friend.GetFriends:input_type -> friend.GetFriendsRequest
	8,  // 6: friend.Friend.DeleteFriend:input_type -> friend.DeleteFriendRequest
	13, // 7: friend.Friend.BlockFriend:input_type -> friend.BlockFriendReq
	2,  // 8: friend.Friend.SendFriendRequest:output_type -> friend.SendFriendRequestResponse
	5,  // 9: friend.Friend.GetFriendRequests:output_type -> friend.GetFriendRequestsResponse
	7,  // 10: friend.Friend.RespondFriendRequest:output_type -> friend.RespondFriendRequestResponse
	12, // 11: friend.Friend.GetFriends:output_type -> friend.GetFriendsResponse
	9,  // 12: friend.Friend.DeleteFriend:output_type -> friend.DeleteFriendResponse
	14, // 13: friend.Friend.BlockFriend:output_type -> friend.BlockFriendResp
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_common_proto_friend_friend_proto_init() }
func file_common_proto_friend_friend_proto_init() {
	if File_common_proto_friend_friend_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_friend_friend_proto_rawDesc), len(file_common_proto_friend_friend_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_proto_friend_friend_proto_goTypes,
		DependencyIndexes: file_common_proto_friend_friend_proto_depIdxs,
		EnumInfos:         file_common_proto_friend_friend_proto_enumTypes,
		MessageInfos:      file_common_proto_friend_friend_proto_msgTypes,
	}.Build()
	File_common_proto_friend_friend_proto = out.File
	file_common_proto_friend_friend_proto_goTypes = nil
	file_common_proto_friend_friend_proto_depIdxs = nil
}
